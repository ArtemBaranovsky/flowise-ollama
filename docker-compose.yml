version: '3.9'
services:
  flowise-db:
    image: postgres:16-alpine
    hostname: flowise-db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./flowise-db-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - flowise_network

  flowise:
    image: flowiseai/flowise:latest
    container_name: flowiseai
    hostname: flowise
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/v1/health"]
      interval: 60s
      timeout: 20s
      retries: 10
      start_period: 120s
    ports:
      - ${PORT}:${PORT}
    volumes:
      - ./flowiseai:/root/.flowise
    env_file: .env
    environment:
      DEBUG: 'false'
      PORT: ${PORT}
      FLOWISE_USERNAME: ${FLOWISE_USERNAME}
      FLOWISE_PASSWORD: ${FLOWISE_PASSWORD}
      APIKEY_PATH: /root/.flowise
      SECRETKEY_PATH: /root/.flowise
      LOG_LEVEL: info
      LOG_PATH: /root/.flowise/logs
      DATABASE_TYPE: ${DATABASE_TYPE}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: flowise-db
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
#      DATABASE_URL: postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@flowise-db:${DATABASE_PORT}/${DATABASE_NAME}?sslmode=disable
    depends_on:
      flowise-db:
        condition: service_healthy
      ollama:
        condition: service_started
    entrypoint: /bin/sh -c "sleep 3; flowise start"
    networks:
      - flowise_network

  ollama:
    build:
      context: ./ollama-models
      dockerfile: Dockerfile
    container_name: ollama
#    restart: unless-stopped
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11435:11434"
    env_file: .env
    environment:
      HF_TOKEN: ${HF_TOKEN}
      GIN_MODE: ${GIN_MODE}
      OLLAMA_CPU: "1"
      OLLAMA_HOST: ${OLLAMA_HOST}
      OLLAMA_MODEL: ${OLLAMA_MODEL}
      MODEL_NAME: ${MODEL_NAME}
    networks:
      - flowise_network

  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    depends_on:
      - flowise
      - htpasswd-generator
#      flowise:
#        condition: service_healthy
#      htpasswd-generator:
#        condition: service_completed_successfully
    networks:
      - flowise_network

  htpasswd-generator:
    image: httpd:alpine
    command: sh -c "htpasswd -Bbn $${ADMIN_USER} $${ADMIN_PASSWORD} > /etc/nginx/.htpasswd"
    env_file: .env
    environment:
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
    volumes:
      - ./nginx:/etc/nginx
    networks:
      - flowise_network
    restart: on-failure

volumes:
  flowise-db-data:
  ollama_data:

networks:
  flowise_network:
    driver: bridge
    name: flowise_network
    attachable: true